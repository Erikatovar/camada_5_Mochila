Comandos Git 
➔ Ayuda 
❏ git help 
➔ Comando específico 
❏ git help add 
❏ git help commit 
❏ git help <cualquier_comando_git> 
➔ Establecer el usuario y el e-mail 
❏ git config --global user.name "nombre de usuario" 
❏ git config --global user.email email@email.com 
➔ Eliminar todos los registros que se refieren al usuario y al e-mail
 ❏ git config --global --unset user.name "nombre de usuario" 
 ❏ git config --global --unset user.email email@email.com 
 ➔ Ver la configuración de Git 
 ❏ git config –list 
 ➔ Crear un nuevo repositorio 
 ❏ git init 
 ➔ Verificar el estado de los archivos/directorios 
 ❏ git status (muestra el estado de los archivos en su repositorio) 
 ➔ Añadir un archivo 
 ❏ git add nombre_archivo_directorio (archivo específico) 
 ❏ git add . / git add --all (todos los archivos) 
 ➔ Commitear un archivo/directorio 
 ❏ git commit nombre_archivo -m "mensaje del commit" 
 ➔ Remover un archivo o directorio 
 ❏ git rm archivo 
 ❏ git rm -r directorio (remueve el directorio y los archivos que contiene) 
 ➔ Ver el historial de actividad 
 ❏ git log (muestra el historial) 
 ❏ git log -- <ruta del archivo> (muestra el historial de un archivo específico)
 ❏ git log --author=usuario (muestra el historial de un usuario en particular) Deshacer operaciones 
 ➔ Deshaciendo el cambio local en su directorio de trabajo local 
 ❏ git checkout -- archivo (solo debe usarse mientras el archivo no se haya añadido todavía 
 al área de trabajo temporal) 
 ➔ Deshaciendo el cambio local en el área de trabajo temporal (staged area) 
 ❏ git reset HEAD archivo (debe usarse cuando el archivo ya ha sido añadido en el área temporal) 
 “Unstaged changes after reset:M archivo” (si se muestra el siguiente resultado, el comando reset no 
 ha cambiado el directorio de trabajo) 
 ❏ git checkout nombre_archivo (permite realizar el cambio de directorio)